' Gambas class file

Public SelectedImage As String = ""
Public MSG_Unsupported_Image_Type As String = "Please select a supported image type."
Public Wallpaperloop_Value As Integer = 0
Public Timed_Wallpaper_1 As String = ""
Public Timed_Wallpaper_2 As String = ""
Public Timed_Wallpaper_3 As String = ""
Public Timed_Wallpaper_4 As String = ""
Public Aspect_Lock As Boolean = True
Public Loading_Desktoppr_wallpapers_Lock As Boolean = False
Public Loading_Local_wallpapers_Lock As Boolean = False
Public Desktoppr_THUMB_URL As String
Public Desktoppr_IMAGE_URL As String
Public Desktoppr_IMAGE_WIDTH As String
Public Desktoppr_IMAGE_HEIGHT As String
Public Okay_To_Exit As Boolean = True
Public Saved_Image_Name As String
Public Set_The_Wallpaper As Boolean = False

Public Sub Form_Open()
  
  'Get And Set Dafult Value Of Aspect For Wallpaper
  Dim TempString As String
  
  Shell "gsettings get org.gnome.desktop.background picture-options" To TempString
  TempString = Replace(TempString, "'", "")
  
  If Not Exist("/home/" & System.User.Name & "/Pictures/Wallpaper") Then
    Mkdir ("/home/" & System.User.Name & "/Pictures/Wallpaper")
  Endif
  
  If (TempString = "none\n") Then
    ComboBox_Aspect.Index = 0
  Endif
  If (TempString = "wallpaper\n") Then
    ComboBox_Aspect.Index = 1
  Endif
  If (TempString = "centered\n") Then
    ComboBox_Aspect.Index = 2
  Endif
  If (TempString = "scaled\n") Then
    ComboBox_Aspect.Index = 3
  Endif
  If (TempString = "stretched\n") Then
    ComboBox_Aspect.Index = 4
  Endif
  If (TempString = "zoom\n") Then
    ComboBox_Aspect.Index = 5
  Endif
  If (TempString = "spanned\n") Then
    ComboBox_Aspect.Index = 6
  Endif
  
  'Set Dialog Path For Add Image
  Dialog.Path = User.Home
  
  'Set Time Combobox To A Default Value
  ComboBox_TimeList.Index = 0 '1 Minute
  
  'Center Program On Desktop
  FMain.Center
  
End

Public Sub Button_SetWallPaper_Click()
  'Set Wallpaper For Desktop
  'We Use Iconview1.key to Get Image Path
  
  If TabPanel_Main.Index = 0 Then
    If Not IconView_Local.Key = "" Then
      Shell "gsettings set org.gnome.desktop.background picture-uri file://" & IconView_Local.Key
    Endif
  Endif
  
  If TabPanel_Main.Index = 1 Then
    If HttpClient3.Status = 0 Then
      If Not IconView_Desktoppr.Key = "" Then
        Set_The_Wallpaper = True
        Saved_Image_Name = File.Name(IconView_Desktoppr.Key)
        HttpClient3.URL = IconView_Desktoppr.Key
        HttpClient3.Get(Null, "/home/" & System.User.Name & "/Pictures/Wallpaper/" & Saved_Image_Name)
      Endif
    Endif
  Endif
  
End

Public Sub Button_AddImage_Click()
  
  AddImageToLocal()
  
End

Public Sub Load_Wallpapers()
  'Loading Of All Wallpapers
  'Using TempImage To Reduce Image Sizes
  'Remember To Clear TempImage To Keep Ram Usage Down
  'Remember To Clear Iconview1
  
  Dim TempImage As Image
  Dim Wallpapersize As String
  Dim Directory As String
  Dim Files As String[]
  Dim FileName As String
  
  IconView_Local.Clear
  
  Directory = User.Home & "/Pictures/Wallpaper/"
  Files = Dir(Directory, "*.png")
  Files.Insert(Dir(Directory, "*.jpg"))
  Files.Insert(Dir(Directory, "*.jpeg"))
  
  For Each FileName In Files
    If Not IconView_Local.Exist(User.Home & "/Pictures/Wallpaper/" & FileName) Then
      'Print User.Home & "/Pictures/Wallpaper/" & FileName
      TempImage = Image.Load(User.Home & "/Pictures/Wallpaper/" & FileName)
      Wallpapersize = TempImage.Width & "x" & TempImage.Height
      
      'Large
      If IconViewlocalMenu_Large.Value = True Then
        TempImage = TempImage.Stretch(295, 184)
      Endif 
      
      'Medium
      If IconViewlocalMenu_Medium.Value = True Then
        TempImage = TempImage.Stretch(183, 121)
      Endif 
      
      'Small
      If IconViewlocalMenu_Small.Value = True Then
        TempImage = TempImage.Stretch(112, 63)
      Endif 
      
      IconView_Local.Add(User.Home & "/Pictures/Wallpaper/" & FileName, Wallpapersize, TempImage.Picture)
      'IconView_Local.Refresh
      TempImage.Clear
      Wait 0.01
      ' IconView_Local.Item.EnsureVisible
    Endif
  Next
  
End

Public Sub Reload_Wallpapers()
  
  Dim TempImage As Image
  Dim Wallpapersize As String
  Dim Directory As String
  Dim Files As String[]
  Dim FileName As String
  
  Directory = User.Home & "/Pictures/Wallpaper/"
  Files = Dir(Directory, "*.png")
  Files.Insert(Dir(Directory, "*.jpg"))
  Files.Insert(Dir(Directory, "*.jpeg"))
  
  For Each FileName In Files
    If Not IconView_Local.Exist(User.Home & "/Pictures/Wallpaper/" & FileName) Then
      'Print User.Home & "/Pictures/Wallpaper/" & FileName
      TempImage = Image.Load(User.Home & "/Pictures/Wallpaper/" & FileName)
      Wallpapersize = TempImage.Width & "x" & TempImage.Height
      
      'Large
      If IconViewlocalMenu_Large.Value = True Then
        TempImage = TempImage.Stretch(295, 184)
      Endif 
      
      'Medium
      If IconViewlocalMenu_Medium.Value = True Then
        TempImage = TempImage.Stretch(183, 121)
      Endif 
      
      'Small
      If IconViewlocalMenu_Small.Value = True Then
        TempImage = TempImage.Stretch(112, 63)
      Endif 
      
      IconView_Local.Add(User.Home & "/Pictures/Wallpaper/" & FileName, Wallpapersize, TempImage.Picture)
      IconView_Local.Refresh
      TempImage.Clear
    Endif
  Next
  
End

Public Sub TrayIcon1_Menu()
  'System Tray Menu
  
  TrayMenu1.Popup()
  
End

Public Sub PictureBox_TimedWallpaper1_MouseDown()
  'First Timed Wallpaper Picturebox
  'Make Sure No Other Timed Wallpaper Has The Same Image
  
  Dim TempImage As Image
  
  If Mouse.Left Then
    If Not IconView_Local.Key = "" Then
      If Not (IconView_Local.key = Timed_Wallpaper_2) Then
        If Not (IconView_Local.key = Timed_Wallpaper_3) Then
          If Not (IconView_Local.key = Timed_Wallpaper_4) Then
            Timed_Wallpaper_1 = IconView_Local.Key
            TempImage = Image.Load(Timed_Wallpaper_1)
            TempImage = TempImage.Stretch(112, 63)
            PictureBox_TimedWallpaper1.Picture = TempImage.Picture
            TempImage.Clear
          Endif
        Endif
      Endif
    Endif
  Endif
  
End

Public Sub PictureBox_TimedWallpaper2_MouseDown()
  'Second Timed Wallpaper Picturebox
  'Make Sure No Other Timed Wallpaper Has The Same Image
  
  Dim TempImage As Image
  
  If Mouse.Left Then
    If Not IconView_Local.Key = "" Then
      If Not (IconView_Local.key = Timed_Wallpaper_1) Then
        If Not (IconView_Local.key = Timed_Wallpaper_3) Then
          If Not (IconView_Local.key = Timed_Wallpaper_4) Then
            Timed_Wallpaper_2 = IconView_Local.Key
            TempImage = Image.Load(Timed_Wallpaper_2)
            TempImage = TempImage.Stretch(112, 63)
            PictureBox_TimedWallpaper2.Picture = TempImage.Picture
            TempImage.clear
          Endif
        Endif
      Endif
    Endif
  Endif
  
End

Public Sub PictureBox_TimedWallpaper3_MouseDown()
  'Third Timed Wallpaper Picturebox
  'Make Sure No Other Timed Wallpaper Has The Same Image
  
  Dim TempImage As Image
  
  If Mouse.Left Then
    If Not IconView_Local.Key = "" Then
      If Not (IconView_Local.key = Timed_Wallpaper_1) Then
        If Not (IconView_Local.key = Timed_Wallpaper_2) Then
          If Not (IconView_Local.key = Timed_Wallpaper_4) Then
            Timed_Wallpaper_3 = IconView_Local.Key
            TempImage = Image.Load(Timed_Wallpaper_3)
            TempImage = TempImage.Stretch(112, 63)
            PictureBox_TimedWallpaper3.Picture = TempImage.Picture
            TempImage.clear
          Endif
        Endif
      Endif
    Endif
  Endif
  
End

Public Sub PictureBox_TimedWallpaper4_MouseDown()
  'Fourth Timed Wallpaper Picturebox
  'Make Sure No Other Timed Wallpaper Has The Same Image
  
  Dim TempImage As Image
  
  If Mouse.Left Then
    If Not IconView_Local.Key = "" Then
      If Not (IconView_Local.key = Timed_Wallpaper_1) Then
        If Not (IconView_Local.key = Timed_Wallpaper_2) Then
          If Not (IconView_Local.key = Timed_Wallpaper_3) Then
            Timed_Wallpaper_4 = IconView_Local.Key
            TempImage = Image.Load(Timed_Wallpaper_4)
            TempImage = TempImage.Stretch(112, 63)
            PictureBox_TimedWallpaper4.Picture = TempImage.Picture
            TempImage.clear
          Endif
        Endif
      Endif
    Endif
  Endif
  
End

Public Sub ComboBox_TimeList_Click()
  'The Time List Combobox
  'Time is in milliseconds so have to Multiply by 60
  
  TrayMenu1_1Min.Checked = False
  TrayMenu1_3Min.Checked = False
  TrayMenu1_5Min.Checked = False
  TrayMenu1_10Min.Checked = False
  
  '1 Min
  If ComboBox_TimeList.Index = 0 Then
    Timer1.Delay = 1000 * 60
    TrayMenu1_1Min.Checked = True
  Endif
  
  '3 Min
  If ComboBox_TimeList.Index = 1 Then
    Timer1.Delay = 3000 * 60
    TrayMenu1_3Min.Checked = True
  Endif
  
  '5 Min
  If ComboBox_TimeList.Index = 2 Then
    Timer1.Delay = 5000 * 60
    TrayMenu1_5Min.Checked = True
  Endif
  
  '10 Min
  If ComboBox_TimeList.Index = 3 Then
    Timer1.Delay = 10000 * 60
    TrayMenu1_10Min.Checked = True
  Endif
  
End

Public Sub Timer1_Timer()
  'Some Type of Loop System Built By Pest121
  
  Wallpaperloop_Value = Wallpaperloop_Value + 1
  
  If Wallpaperloop_Value = 1 Then
    
    'Check if wallpaper string is not emtpy
    If Not Timed_Wallpaper_1 = "" Then
      'Set wallpaper
      Shell "gsettings set org.gnome.desktop.background picture-uri file://" & Timed_Wallpaper_1
    Else
      Wallpaperloop_Value = 2
    Endif
  Endif
  
  If Wallpaperloop_Value = 2 Then
    
    'Check if wallpaper string is not emtpy
    If Not Timed_Wallpaper_2 = "" Then
      'Set wallpaper
      Shell "gsettings set org.gnome.desktop.background picture-uri file://" & Timed_Wallpaper_2
    Else
      Wallpaperloop_Value = 3
    Endif
  Endif
  
  If Wallpaperloop_Value = 3 Then
    
    'Check if wallpaper string is not emtpy
    If Not Timed_Wallpaper_3 = "" Then
      'Set wallpaper
      Shell "gsettings set org.gnome.desktop.background picture-uri file://" & Timed_Wallpaper_3
    Else
      Wallpaperloop_Value = 4
    Endif
  Endif
  
  If Wallpaperloop_Value = 4 Then
    
    'Check if wallpaper string is not emtpy
    If Not Timed_Wallpaper_4 = "" Then
      'Set wallpaper
      Shell "gsettings set org.gnome.desktop.background picture-uri file://" & Timed_Wallpaper_4
      Wallpaperloop_Value = 0
    Else
      Wallpaperloop_Value = 1
    Endif
  Endif
  
End

Public Sub ComboBox_Aspect_Click()
  'Set Wallpaper Aspect Sizes (None,Wallpaper,Centered,Scaled,Stretched,Zoom,Spanned)
  'A Lock Is Being Used Here
  
  If Aspect_Lock = False Then
    If ComboBox_Aspect.Index = 0 Then
      Shell "gsettings set org.gnome.desktop.background picture-options none"
    Endif
    If ComboBox_Aspect.Index = 1 Then
      Shell "gsettings set org.gnome.desktop.background picture-options wallpaper"
    Endif
    If ComboBox_Aspect.Index = 2 Then
      Shell "gsettings set org.gnome.desktop.background picture-options centered"
    Endif
    If ComboBox_Aspect.Index = 3 Then
      Shell "gsettings set org.gnome.desktop.background picture-options scaled"
    Endif
    If ComboBox_Aspect.Index = 4 Then
      Shell "gsettings set org.gnome.desktop.background picture-options stretched"
    Endif
    If ComboBox_Aspect.Index = 5 Then
      Shell "gsettings set org.gnome.desktop.background picture-options zoom"
    Endif
    If ComboBox_Aspect.Index = 6 Then
      Shell "gsettings set org.gnome.desktop.background picture-options spanned"
    Endif
  Endif
  Aspect_Lock = False
  
End

Public Sub SwitchButton1_Click()
  'Turn On Timer For WallpaperChanger
  
  Dim iCount As Integer = 0
  
  If Not Timed_Wallpaper_1 = "" Then
    iCount = iCount + 1
  Endif
    If Not Timed_Wallpaper_2 = "" Then
    iCount = iCount + 1
  Endif
    If Not Timed_Wallpaper_3 = "" Then
    iCount = iCount + 1
  Endif
    If Not Timed_Wallpaper_4 = "" Then
    iCount = iCount + 1
  Endif
  
  If SwitchButton1.Value = True Then
    If iCount > 1 Then
      Timer1.Enabled = True
      TrayMenu1_TimedWallpapers.Checked = True
    Else
      SwitchButton1.Value = False
      TrayMenu1_TimedWallpapers.Checked = False
      Message.Info("Please select at least two images")
    Endif
  Else
    Timer1.Enabled = False
    TrayMenu1_TimedWallpapers.Checked = False
  Endif
  
  
End

Public Sub Button_RemoveImage_Click()
  
  RemoveImageFromLocal()
  
End

Public Sub TabPanel_Main_Click()
  
  Dim A_Random_Number As Integer
  
  If TabPanel_Main.Index = 0 Then
    Button_AddImage.Visible = True
    Button_RemoveImage.Visible = True
    PictureBox_TimedWallpaper1.Visible = True
    PictureBox_TimedWallpaper2.Visible = True
    PictureBox_TimedWallpaper3.Visible = True
    PictureBox_TimedWallpaper4.Visible = True
    ComboBox_TimeList.Visible = True
    SwitchButton1.Visible = True
    
    Button_RandomPage.Visible = False
    Button_PreviousPage.Visible = False
    Button_NextPage.Visible = False
    SpinBox_Pages.Visible = False
    Label_MaxPages.Visible = False
    Button_SaveImage.Visible = False
    Spinner1.Visible = False
    ProgressBar1.Visible = False
  Endif
  
  If TabPanel_Main.Index = 1 Then
    Button_AddImage.Visible = False
    Button_RemoveImage.Visible = False
    PictureBox_TimedWallpaper1.Visible = False
    PictureBox_TimedWallpaper2.Visible = False
    PictureBox_TimedWallpaper3.Visible = False
    PictureBox_TimedWallpaper4.Visible = False
    ComboBox_TimeList.Visible = False
    SwitchButton1.Visible = False
    
    Button_RandomPage.Visible = True
    Button_PreviousPage.Visible = True
    Button_NextPage.Visible = True
    SpinBox_Pages.Visible = True
    Label_MaxPages.Visible = True
    Button_SaveImage.Visible = True
    Spinner1.Visible = True
    ProgressBar1.Visible = True
    
    If Loading_Desktoppr_wallpapers_Lock = False Then
      Loading_Desktoppr_wallpapers_Lock = True
      A_Random_Number = Rand(SpinBox_Pages.MinValue, 4500)
      Randomize
      SpinBox_Pages.Value = A_Random_Number
    Endif
    
  Endif
  
End

Public Sub HttpClient1_Finished()
  
  Dim sBuf As String
  Dim Line_String As String
  Dim Requested_From_Desktoppr As String[]
  
  sBuf = Read #HttpClient1, Lof(HttpClient1)
  Requested_From_Desktoppr = Split(sBuf, ",")
  Okay_To_Exit = False
  For Each Line_String In Requested_From_Desktoppr
    Line_String = Line_String & "\n"
    
    'THUMB URL
    If InStr(Line_String, "thumb") > 0 And InStr(Line_String, "url") > 0 Then
      Line_String = Replace$(Line_String, Chr(34), "")
      Line_String = Replace$(Line_String, "\n", "")
      Line_String = Mid$(Line_String, 12)
      Desktoppr_THUMB_URL = Line_String
      Line_String = Replace$(Line_String, "thumb_", "")
      Desktoppr_IMAGE_URL = Line_String
    Endif
    
    'Desktopper_Image_Width
    If InStr(Line_String, "width") > 0 Then
      Line_String = Replace$(Line_String, Chr(34), "")
      Line_String = Replace$(Line_String, "\n", "")
      Line_String = Mid$(Line_String, 7)
      If InStr(Line_String, "296") = 0 And If InStr(Line_String, "960") = 0 Then
        Desktoppr_IMAGE_WIDTH = Line_String
      Endif
      
    Endif
    
    'Desktopper_Image_Height
    If InStr(Line_String, "height") > 0 Then
      Line_String = Replace$(Line_String, Chr(34), "")
      Line_String = Replace$(Line_String, "}", "")
      Line_String = Replace$(Line_String, "\n", "")
      Line_String = Mid$(Line_String, 8)
      'If InStr(Line_String, "185") = 0 And If InStr(Line_String, "639") = 0 And If InStr(Line_String, "540") = 0 And If InStr(Line_String, "600") = 0 Then
      Desktoppr_IMAGE_HEIGHT = Line_String
      'Endif
      
    Endif
    
    'IconView1 Add Items
    If Not Desktoppr_THUMB_URL = "" Then
      'If Not IconView_Desktoppr.Exist(Desktoppr_IMAGE_URL) And If Not Desktoppr_IMAGE_URL = "" Then
      If Not Desktoppr_IMAGE_WIDTH = "" And If Not Desktoppr_IMAGE_HEIGHT = "" Then
        
        If Exist("/tmp/tempimage.jpeg") Then
          Kill "/tmp/tempimage.jpeg"
        Endif
        
        HttpClient2.URL = Desktoppr_THUMB_URL
        HttpClient2.Get(Null, "/tmp/tempimage.jpeg")
        
        Do While HttpClient2.Status > 0
          Wait 0.01
        Loop
        
        Kill "/tmp/tempimage.jpeg"
        Desktoppr_IMAGE_URL = ""
        Desktoppr_THUMB_URL = ""
        Desktoppr_IMAGE_WIDTH = ""
        Desktoppr_IMAGE_HEIGHT = ""
        
      Endif
      'Endif
    Endif
    
    'PAGES
    If InStr(Line_String, "pages") > 0 Then
      Line_String = Replace$(Line_String, Chr(34), "")
      Line_String = Replace$(Line_String, "pages", "")
      Line_String = Replace$(Line_String, "\n", "")
      Line_String = Mid$(Line_String, 2)
      SpinBox_Pages.MaxValue = Val(Line_String)
      Label_MaxPages.Text = "Of " & Line_String
    Endif
  Next
  
  Okay_To_Exit = True
  Spinner1.Visible = False
  Spinner1.Stop
   
End

Public Sub HttpClient2_Finished()
  
  Dim TempImage2 As Image
  
  If Exist("/tmp/tempimage.jpeg") Then
    TempImage2 = Image.Load("/tmp/tempimage.jpeg")
    TempImage2 = TempImage2.Stretch(295, 184)
    IconView_Desktoppr.Add(Desktoppr_IMAGE_URL, Desktoppr_IMAGE_WIDTH & "x" & Desktoppr_IMAGE_HEIGHT, TempImage2.Picture)
    IconView_Desktoppr.Item.EnsureVisible
    TempImage2.Clear
    
  Endif
  
End

Public Sub HttpClient3_Finished()
  
  If Set_The_Wallpaper = True Then
    If Exist("/home/" & System.User.Name & "/Pictures/Wallpaper/" & Saved_Image_Name) Then
      Shell "gsettings set org.gnome.desktop.background picture-uri file://" & "/home/" & System.User.Name & "/Pictures/Wallpaper/" & Saved_Image_Name
    Endif
  Endif
  
  Set_The_Wallpaper = False
  Saved_Image_Name = ""
  ProgressBar1.Value = 0
  ProgressBar1.Refresh
  'Wait 0.01
  Reload_Wallpapers()
  
End

Public Sub HttpClient1_Error()
  
  Message.Error("Error Status: " & HttpClient1.Status & "\nError Text: " & HttpClient1.ErrorText, "Okay")
  
End

Public Sub HttpClient2_Error()
  
  Message.Error("Error Status: " & HttpClient2.Status & "\nError Text: " & HttpClient2.ErrorText, "Okay")
  
End

Public Sub HttpClient3_Error()
  
  Message.Error("Error Status: " & HttpClient3.Status & "\nError Text: " & HttpClient3.ErrorText, "Okay")
  
End

Public Sub HttpClient1_Connect()
  
  'Print "(HttpClient1) Waiting for reply...\n";
  Spinner1.Visible = True
  Spinner1.Start
   
End

Public Sub HttpClient2_Connect()
  
  'Print "(HttpClient2) Waiting for reply...\n";
  
End

Public Sub HttpClient3_Connect()
  
  'Print "(HttpClient3) Waiting for reply...\n";
  
End

Public Sub Button_PreviousPage_Click()
  
  If HttpClient2.Status = 0 Then
    SpinBox_Pages.Value = SpinBox_Pages.Value - 1
  Endif
  
End

Public Sub Button_NextPage_Click()
  
  If HttpClient2.Status = 0 Then
    SpinBox_Pages.Value = SpinBox_Pages.Value + 1
  Endif
  
End

Public Sub SpinBox_Pages_Change()

  IconView_Desktoppr.Clear
  HttpClient1.URL = "https://api.desktoppr.co/1/wallpapers?page=" & SpinBox_Pages.Value
  HttpClient1.Get()
  
End

Public Sub Button_RandomPage_Click()
  
  Dim A_Random_Number As Integer
  
  If HttpClient2.Status = 0 Then
    A_Random_Number = Rand(SpinBox_Pages.MinValue, SpinBox_Pages.MaxValue)
    Randomize
    SpinBox_Pages.Value = A_Random_Number
  Endif
  
End

Public Sub Button_SaveImage_Click()
  
  If HttpClient3.Status = 0 Then
    If Not IconView_Desktoppr.key = "" Then
      Saved_Image_Name = File.Name(IconView_Desktoppr.Key)
      HttpClient3.URL = IconView_Desktoppr.Key
      HttpClient3.Get(Null, "/home/" & System.User.Name & "/Pictures/Wallpaper/" & Saved_Image_Name)
    Endif
  Endif
  
End

Public Sub HttpClient3_Progress()
  
  Dim I_PER As Integer
  Dim F_PER As Float
  
  If HttpClient3.Downloaded > 0 Then
    I_PER = (HttpClient3.Downloaded * 100) / HttpClient3.TotalDownloaded
    F_PER = I_PER
    F_PER = F_PER / 100
    ProgressBar1.Value = F_PER
  Endif
  
End

Public Sub Form_Close()
  
  If Okay_To_Exit = False Then
    Stop Event
  Else
    If Not HttpClient2.Status > 0 Then
      HttpClient2.Stop
      HttpClient2.Close
    Endif
    TrayIcon1.Delete
  Endif
  
End

Public Sub PictureBox_TimedWallpaper1_Menu()
  
  If Not Timed_Wallpaper_1 = "" Then
    TimedWallpaperMenu1_SwitchWith2.Enabled = True
    TimedWallpaperMenu1_SwitchWith3.Enabled = True
    TimedWallpaperMenu1_SwitchWith4.Enabled = True
    TimedWallpaperMenu1_ClearImage.Enabled = True
  Else
    TimedWallpaperMenu1_SwitchWith2.Enabled = False
    TimedWallpaperMenu1_SwitchWith3.Enabled = False
    TimedWallpaperMenu1_SwitchWith4.Enabled = False
    TimedWallpaperMenu1_ClearImage.Enabled = False
  Endif
  
  TimedWallpaperMenu1.Popup
  
End

Public Sub PictureBox_TimedWallpaper2_Menu()
  
  If Not Timed_Wallpaper_2 = "" Then
    TimedWallpaperMenu2_SwitchWith1.Enabled = True
    TimedWallpaperMenu2_SwitchWith3.Enabled = True
    TimedWallpaperMenu2_SwitchWith4.Enabled = True
    TimedWallpaperMenu2_ClearImage.Enabled = True
  Else
    TimedWallpaperMenu2_SwitchWith1.Enabled = False
    TimedWallpaperMenu2_SwitchWith3.Enabled = False
    TimedWallpaperMenu2_SwitchWith4.Enabled = False
    TimedWallpaperMenu2_ClearImage.Enabled = False
  Endif
  
  TimedWallpaperMenu2.Popup
  
End

Public Sub PictureBox_TimedWallpaper3_Menu()
  
  If Not Timed_Wallpaper_3 = "" Then
    TimedWallpaperMenu3_SwitchWith2.Enabled = True
    TimedWallpaperMenu3_SwitchWith1.Enabled = True
    TimedWallpaperMenu3_SwitchWith4.Enabled = True
    TimedWallpaperMenu3_ClearImage.Enabled = True
  Else
    TimedWallpaperMenu3_SwitchWith2.Enabled = False
    TimedWallpaperMenu3_SwitchWith1.Enabled = False
    TimedWallpaperMenu3_SwitchWith4.Enabled = False
    TimedWallpaperMenu3_ClearImage.Enabled = False
  Endif
  
  TimedWallpaperMenu3.Popup
  
End

Public Sub PictureBox_TimedWallpaper4_Menu()
  
  If Not Timed_Wallpaper_4 = "" Then
    TimedWallpaperMenu4_SwitchWith2.Enabled = True
    TimedWallpaperMenu4_SwitchWith3.Enabled = True
    TimedWallpaperMenu4_SwitchWith1.Enabled = True
    TimedWallpaperMenu4_ClearImage.Enabled = True
  Else
    TimedWallpaperMenu4_SwitchWith2.Enabled = False
    TimedWallpaperMenu4_SwitchWith3.Enabled = False
    TimedWallpaperMenu4_SwitchWith1.Enabled = False
    TimedWallpaperMenu4_ClearImage.Enabled = False
  Endif
  
  TimedWallpaperMenu4.Popup
  
End

Public Sub AddImageToLocal()
  
  'Use Dialog To Add Image To Prorogram And Folder
  'We Use ImageFile To Get Copy Path And File.Name(ImageFile) to get Destination Path
  
  Dim ImageFile As String
  
  Dialog.Title = "Select Image"
  Dialog.filter = ["*.jpg;*.jpeg;*.png;", "All Files", "*.jpg;*.jpeg", "Joint Photographic Expert Group", "*.png", "Portable Network Graphics"]
  If Dialog.OpenFile(True) Then Return
  For Each ImageFile In Dialog.Paths
    Copy ImageFile To User.Home & "/Pictures/Wallpaper/" & File.Name(ImageFile)
  Next
  Load_Wallpapers()
  
End

Public Sub RemoveImageFromLocal()
  
  'Remove An Image From Program And Folder
  'Not Kill Removes Image Permanently Use Move Function Instead And Move To Trash
  
  If Not IconView_Local.Key = "" Then
    If Message.Question("You Sure You Want To Remove:\n" & IconView_Local.key, "Yes", "Cancel") = 1 Then
      Move IconView_Local.key To User.Home & "/.local/share/Trash/files/" & File.Name(IconView_Local.Key)
      IconView_Local.Remove(IconView_Local.Key)
      Load_Wallpapers()
    Endif
  Else
    'MSG HERE
  Endif
  
End

Public Sub IconViewlocalMenu_Add_Click()
  
  AddImageToLocal()
  
End

Public Sub IconViewlocalMenu_Remove_Click()
  
  RemoveImageFromLocal()
  
End

Public Sub IconView_Local_Menu()
  
  IconViewlocalMenu.Popup
  
End

Public Sub IconViewlocalMenu_Reload_Click()
  
  Load_Wallpapers()
  
End

Public Sub TimedWallpaperMenu1_SwitchWith2_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_1
  Dim ImageTo As String = Timed_Wallpaper_2
  Dim TempImage As Image
  
  Timed_Wallpaper_1 = ImageTo
  Timed_Wallpaper_2 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper1.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper1.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper2.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper2.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu1_SwitchWith3_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_1
  Dim ImageTo As String = Timed_Wallpaper_3
  Dim TempImage As Image
  
  Timed_Wallpaper_1 = ImageTo
  Timed_Wallpaper_3 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper1.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper1.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper3.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper3.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu1_SwitchWith4_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_1
  Dim ImageTo As String = Timed_Wallpaper_4
  Dim TempImage As Image
  
  Timed_Wallpaper_1 = ImageTo
  Timed_Wallpaper_4 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper1.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper1.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper4.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper4.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu2_SwitchWith1_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_2
  Dim ImageTo As String = Timed_Wallpaper_1
  Dim TempImage As Image
  
  Timed_Wallpaper_2 = ImageTo
  Timed_Wallpaper_1 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper2.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper2.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper1.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper1.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu2_SwitchWith3_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_2
  Dim ImageTo As String = Timed_Wallpaper_3
  Dim TempImage As Image
  
  Timed_Wallpaper_2 = ImageTo
  Timed_Wallpaper_3 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper2.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper2.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper3.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper3.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu2_SwitchWith4_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_2
  Dim ImageTo As String = Timed_Wallpaper_4
  Dim TempImage As Image
  
  Timed_Wallpaper_2 = ImageTo
  Timed_Wallpaper_4 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper2.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper2.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper4.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper4.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu3_SwitchWith1_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_3
  Dim ImageTo As String = Timed_Wallpaper_1
  Dim TempImage As Image
  
  Timed_Wallpaper_3 = ImageTo
  Timed_Wallpaper_1 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper3.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper3.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper1.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper1.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu3_SwitchWith2_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_3
  Dim ImageTo As String = Timed_Wallpaper_2
  Dim TempImage As Image
  
  Timed_Wallpaper_3 = ImageTo
  Timed_Wallpaper_2 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper3.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper3.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper2.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper2.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu3_SwitchWith4_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_3
  Dim ImageTo As String = Timed_Wallpaper_4
  Dim TempImage As Image
  
  Timed_Wallpaper_3 = ImageTo
  Timed_Wallpaper_4 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper3.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper3.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper4.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper4.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu4_SwitchWith1_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_4
  Dim ImageTo As String = Timed_Wallpaper_1
  Dim TempImage As Image
  
  Timed_Wallpaper_4 = ImageTo
  Timed_Wallpaper_1 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper4.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper4.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper1.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper1.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu4_SwitchWith2_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_4
  Dim ImageTo As String = Timed_Wallpaper_2
  Dim TempImage As Image
  
  Timed_Wallpaper_4 = ImageTo
  Timed_Wallpaper_2 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper4.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper4.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper2.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper2.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TimedWallpaperMenu4_SwitchWith3_Click()
  
  Dim ImageFrom As String = Timed_Wallpaper_4
  Dim ImageTo As String = Timed_Wallpaper_3
  Dim TempImage As Image
  
  Timed_Wallpaper_4 = ImageTo
  Timed_Wallpaper_3 = ImageFrom
  
  If Not ImageTo = "" Then
    TempImage = Image.Load(ImageTo)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper4.Picture = TempImage.Picture 
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper4.Picture = New Picture(1, 1, True)
  Endif
  
  If Not ImageFrom = "" Then
    TempImage = Image.Load(ImageFrom)
    TempImage = TempImage.Stretch(112, 63)
    PictureBox_TimedWallpaper3.Picture = TempImage.Picture
    TempImage.Clear
  Else
    PictureBox_TimedWallpaper3.Picture = New Picture(1, 1, True)
  Endif
  
End

Public Sub TrayMenu1_TimedWallpapers_Click()
  
  If TrayMenu1_TimedWallpapers.Checked Then
    SwitchButton1.Value = 1
  Else
    SwitchButton1.Value = 0
  Endif
  
End

Public Sub TrayMenu1_1Min_Click()
  
  ComboBox_TimeList.Index = 0
  
End

Public Sub TrayMenu1_3Min_Click()
  
  ComboBox_TimeList.Index = 1
  
End

Public Sub TrayMenu1_5Min_Click()
  
  ComboBox_TimeList.Index = 2
  
End

Public Sub TrayMenu1_10Min_Click()
  
  ComboBox_TimeList.Index = 3
  
End

Public Sub Form_Activate()
  
  If Loading_Local_wallpapers_Lock = False Then
    Wait 0.01
    Load_Wallpapers()
    Loading_Local_wallpapers_Lock = True
  Endif
  
End

Public Sub IconViewlocalMenu_Small_Click()
  
  Load_Wallpapers()
  
End

Public Sub IconViewlocalMenu_Medium_Click()
  
  Load_Wallpapers()
  
End

Public Sub IconViewlocalMenu_Large_Click()
  
  Load_Wallpapers()
  
End

Public Sub IconView_Desktoppr_Menu()
  
  IconViewDesktopprMenu.Popup
  
End

Public Sub IconViewDesktopprMenu_SetWallPaper_Click()
  
  If HttpClient3.Status = 0 Then
    If Not IconView_Desktoppr.Key = "" Then
      Set_The_Wallpaper = True
      Saved_Image_Name = File.Name(IconView_Desktoppr.Key)
      HttpClient3.URL = IconView_Desktoppr.Key
      HttpClient3.Get(Null, "/home/" & System.User.Name & "/Pictures/Wallpaper/" & Saved_Image_Name)
    Endif
  Endif
  
End

Public Sub IconViewDesktopprMenu_SaveImage_Click()
  
  If HttpClient3.Status = 0 Then
    If Not IconView_Desktoppr.key = "" Then
      Saved_Image_Name = File.Name(IconView_Desktoppr.Key)
      HttpClient3.URL = IconView_Desktoppr.Key
      HttpClient3.Get(Null, "/home/" & System.User.Name & "/Pictures/Wallpaper/" & Saved_Image_Name)
    Endif
  Endif
  
End

Public Sub IconViewDesktopprMenu_CopyUrl_Click()
  
  If Not IconView_Desktoppr.key = "" Then
    Clipboard.Copy(IconView_Desktoppr.key)
    Message.Info("Url copied to Clipboard")
  Endif
  
End

Public Sub TimedWallpaperMenu1_ClearImage_Click()
  
  PictureBox_TimedWallpaper1.Picture = New Picture(1, 1, True) 
  Timed_Wallpaper_1 = ""
  
End

Public Sub TimedWallpaperMenu2_ClearImage_Click()
  
  PictureBox_TimedWallpaper2.Picture = New Picture(1, 1, True) 
  Timed_Wallpaper_2 = ""
  
End

Public Sub TimedWallpaperMenu3_ClearImage_Click()
  
  PictureBox_TimedWallpaper3.Picture = New Picture(1, 1, True) 
  Timed_Wallpaper_3 = ""
  
End

Public Sub TimedWallpaperMenu4_ClearImage_Click()
  
  PictureBox_TimedWallpaper4.Picture = New Picture(1, 1, True) 
  Timed_Wallpaper_4 = ""
  
End
